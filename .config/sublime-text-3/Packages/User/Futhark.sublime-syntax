%YAML 1.2
---
name: Futhark
file_extensions:
  - fut
scope: source.futhark

variables:
  id: '[a-zA-Z_][a-zA-Z0-9_'']*'
  int_type: '[iuf](?:8|16|32|64)'
  float_type: 'f(?:32|64)'
  exponent: '[-+]??(_?){{dec_integer}}'
  dec_exponent: (?:[Ee]{{exponent}})
  hex_exponent: (?:[Pp]{{exponent}})
  opstartchar: '(?:\+|-|\*|/|%|=|!|>|<|\|&|\^)'
  opchar: (?:{{opstartchar}}|\.)
  binop: (?:{{opstartchar}}{{opchar}}*)
  type_param: (?:\[\s*(?:{{id}})\s*\]|'\s*{{id}})

contexts:
  main:
    - include: bindings
    - include: comments
    - include: types
    - include: numbers
    - include: strings
    - include: operators
    - include: constants
    - include: keywords
    - include: builtins

  bindings:
    - match: '\b(let|entry)\s+({{id}}|\(\s*{{binop}}\s*\))'
      captures:
        1: keyword.other.futhark
        2: variable.futhark
      push: type_params
    - match: '\b(val)\s+({{id}})'
      captures:
        1: keyword.other.futhark
        2: variable.futhark
      push: type_params
    - match: '\b(type)[~^]?\s+({{id}})'
      captures:
        1: keyword.other.futhark
        2: variable.futhark
      push: type_params

  type_params:
    - meta_scope: meta.function.parameters.futhark
    - match: '({{type_param}})'
      scope: storage.type.futhark
    - match: (?!'|\[|\s)
      pop: true

  comments:
    - match: --
      scope: punctuation.definition.comment.futhark
      push:
        - meta_scope: comment.line.double-dash.futhark
        - match: \n
          pop: true

  types:
    - match: '\b({{int_type}})\b'
      scope: storage.type.futhark
    - match: '\b({{float_type}})\b'
      scope: storage.type.futhark
    - match: \b(bool)\b
      scope: storage.type.futhark

  numbers:
    - match: \b((?:0x[0-9a-fA-F_]+)(?:\.[0-9a-fA-F_]+(?:[Pp](?:\+|-)[0-9]+)?)?)({{int_type}}|{{float_type}})?\b
      captures:
        "1": constant.numeric.futhark
        "2": storage.type.futhark

    - match: \b(0b[01_]+)({{int_type}})?\b
      captures:
        "1": constant.numeric.futhark
        "2": storage.type.futhark

    - match: \b((?:[0-9_]+)(?:\.[0-9_]+)?(?:[eE](?:\+|-)?[0-9]+)?)({{int_type}}|{{float_type}})?\b
      captures:
        "1": constant.numeric.futhark
        "2": storage.type.futhark

  strings:
    - match: '"'
      scope: punctuation.definition.string.begin.futhark
      push:
        - meta_scope: string.quoted.double.futhark
        - match: '"'
          scope: punctuation.definition.string.end.futhark
          pop: true
        - include: string-escaped-char
    - match: "(?<![a-zA-Z0-9_])'"
      scope: punctuation.definition.string.begin.futhark
      push:
        - meta_scope: string.quoted.raw.futhark
        - match: "'"
          scope: punctuation.definition.string.end.futhark
          pop: true
        - include: string-escaped-char

  string-escaped-char:
    - match: '\\[\\abefnrutv''"]'
      scope: constant.character.escape.futhark
    - match: \\.
      scope: invalid.illegal.unknown-escape.futhark

  operators:
    - match: (\.|,|\+\+|:>|:|\|\|&&|<=|>=|>|<|==|!=|&|\^|\||<<|>>|\+|-|\*|%|/|//|%%|\|>|<\|->|~|\\|=|!)
      scope: keyword.operator.futhark

  constants:
    - match: \b(true|false)\b
      scope: constant.language.futhark

  keywords:
    - match: \b(open|import|local|module|val|include)\b
      scope: keyword.control.import.futhark
    - match: \b(let|entry|in)\b
      scope: keyword.declaration.futhark
    - match: \b(type)\b
      scope: storage.type.futhark
    - match: \b(if|then|else|loop|unsafe|assert|with|match|case|for|while|do)\b
      scope: keyword.control.futhark

  builtins:
    - match: (?<!#)\b(length|null|head|last|tail|init|take|drop|split|reverse|concat|concat_to|rotate|iota|indices|replicate|copy|flatten(_to)?|flatten_[34]d|unflatten|unflatten_[34]d|transpose|and|or|fold[lr]|tabulate|tabulate_[23]d)\b
      scope: support.function.builtin.futhark
    - match: (?<!#)\b(flip|curry|uncurry|const|id|iterate|iterate_until|iterate_while)\b
      scope: support.function.builtin.futhark
    - match: (?<!#)\b(to_i64|negate|max|min|abs|sgn|highest|lowest|sum|product|maximum|minimum|num_bits|get_bit|set_bit|popc|mul_hi|mad_hi|clz|ctz|from_fraction|to_i64|to_f64|sqrt|exp|a?sinh?|a?cosh?|a?tanh?|atan2|l?gamma|lerp|log|log10|log2|ceil|floor|trunc|mad|fma|round|isinf|isnan|inf|nan|pi|e|from_bits|to_bits)\b
      scope: support.function.builtin.futhark
    - match: (?<!#)\b([rt](32|64)|opaque|trace|break)\b
      scope: support.function.builtin.futhark
    - match: (?<!#)\b(map[2-5]?|reduce|reduce_comm|reduce_by_index|scan|filter|partition2?|(reduce|map)_stream(_per)?|all|any|scatter)\b
      scope: support.function.builtin.futhark
    - match: (?<!#)\b((un)?zip[2-5]?)\b
      scope: support.function.builtin.futhark
