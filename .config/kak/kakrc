colorscheme lucius

# --- Editor settings --
# Tab size of 4 spaces
set-option global tabstop 4
set-option global indentwidth 4

hook global ModuleLoaded clang %{ set-option clang_options -std=c++20 }

# Enable editorconfig
hook global BufOpenFile .* %{ editorconfig-load }
hook global BufNewFile .* %{ editorconfig-load }

# Custom header guard syntax

hook global BufNewFile .*\.(h|hh|hpp|hxx|H) guard

# --- Language-specific settings ---
hook global WinSetOption filetype=(c|cpp) %{
    clang-enable-autocomplete
    clang-enable-diagnostics
    alias window lint clang-parse
    alias window lint-next-error clang-diagnostics-next

    # Disable default header guard syntax
    set-option global disabled_hooks 'c-family-insert'
}

hook global WinSetOption filetype=latex %{
    # Add soft wrapping on long lines
    add-highlighter window/latex-word-wrap wrap -word -indent
}

# Tab settings (no tabs allowed)
map global insert <tab> '<a-;><a-gt>'
map global insert <s-tab> '<a-;><a-lt>'

# --- UI settings ---
hook global WinCreate .* %{ add-highlighter window/number-lines number-lines -relative -hlcursor -separator ' ' }

add-highlighter global/ regex \h+$ 0:Error
add-highlighter global/ show-matching
add-highlighter global/ line '%val{cursor_line}' default,rgb:404040

set-option global ui_options terminal_assistant=none
set-option global startup_info_version 20210828
set-option global scrolloff 1,3

set-face global CurWord default+b

hook global NormalIdle .* %{
    eval -draft %{ try %{
        exec <space><a-i>w <a-k>\A\w+\z<ret>
        add-highlighter -override global/curword regex "\b\Q%val{selection}\E\b" 0:CurWord
    } catch %{
        add-highlighter -override global/curword group
    } }
}

# --- Plugins ---
source "%val{config}/plugins/plug.kak/rc/plug.kak"

plug "andreyorst/plug.kak" noload

plug "gustavo-hms/luar" %{
    require-module luar
    plug "gustavo-hms/peneira" %{
        require-module peneira

        define-command peneira-buffers %{
            peneira 'buffers: ' %{ printf '%s\n' $kak_quoted_buflist } %{ buffer %arg{1} }
        }
    }

    set-option global luar_interpreter luajit
}

plug "NNBnh/clipb.kak" config %{
    clipb-detect
    clipb-enable
}

# --- Commands ---
define-command guard -docstring "Generate header guards for the current file" %{
    evaluate-commands %sh{
        printf "exec i$kak_bufname<esc>xs(/|\.|$)<ret>r_xs^(include|src)_<ret>dI$(basename $PWD)_<esc>xs^($(basename $PWD)_){1,2}<ret>c$(basename $PWD)_<esc>x~yI#ifndef<space><esc>o#define<space><c-r>\"<ret><ret><ret>#endif<esc>kk"
    }
}

# --- Key bindings ---
# Word count
map global user 'w' %{:echo %sh{wc -w <lt><lt><lt> "${kak_selection}"}<ret>}

# Calculator
map global normal '=' %{:prompt 'math: ' %{echo %sh{qalc -t +u8 "$kak_text"}}<ret>}
map global normal '+' %{:prompt 'insert math: ' %{exec "!qalc -t +u8 ""%val{text}""<lt>ret>i<lt>backspace><lt>esc>"}<ret>}
map global normal <a-=> '|qalc -t +u8 -f -<ret>'

map global normal <c-p> ':peneira-files<ret>'
map global normal <c-b> ':peneira-buffers<ret>'

map global normal <a-d> '<a-h><a-l>d'

map global normal '#' ':comment-line<ret>'
map global normal Q ':db<ret>'
